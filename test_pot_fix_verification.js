// –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –ø–æ–¥—Å—á–µ—Ç–∞ –±–∞–Ω–∫–∞
console.log('üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –ø–æ–¥—Å—á–µ—Ç–∞ –±–∞–Ω–∫–∞');
console.log('=====================================');
console.log('');

// –°–∏–º—É–ª—è—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö Hand History —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–æ–π
const handData = {
  preflopInvestments: {
    'player1': 11500, // $115 –≤ —Ü–µ–Ω—Ç–∞—Ö
    'player2': 11500  // $115 –≤ —Ü–µ–Ω—Ç–∞—Ö
  },
  actions: [
    // FLOP
    { playerId: 'player1', action: 'bet', amount: 11500, street: 'flop' },
    { playerId: 'player2', action: 'raise', amount: 11500, totalBet: 23000, street: 'flop' },
    { playerId: 'player1', action: 'call', amount: 11500, street: 'flop' },
    
    // TURN
    { playerId: 'player1', action: 'check', amount: 0, street: 'turn' },
    { playerId: 'player2', action: 'check', amount: 0, street: 'turn' },
    
    // RIVER
    { playerId: 'player1', action: 'bet', amount: 10750, street: 'river' },
    { playerId: 'player2', action: 'raise', amount: 10750, totalBet: 21500, street: 'river' },
    { playerId: 'player1', action: 'raise', amount: 33750, totalBet: 55250, street: 'river' },
    { playerId: 'player2', action: 'raise', amount: 10750, totalBet: 66000, street: 'river' },
    { playerId: 'player1', action: 'call', amount: 10750, street: 'river' }
  ]
};

// –°–∏–º—É–ª—è—Ü–∏—è –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏ –ø–æ–¥—Å—á–µ—Ç–∞
let totalPot = 0;

// –ü—Ä–µ—Ñ–ª–æ–ø
const preflopTotal = Object.values(handData.preflopInvestments).reduce((a, b) => a + b, 0);
totalPot += preflopTotal;
console.log(`üí∞ –ü—Ä–µ—Ñ–ª–æ–ø: $${(preflopTotal / 100).toFixed(2)}`);

// –ü–æ–¥—Å—á–µ—Ç –ø–æ —É–ª–∏—Ü–∞–º (–Ω–æ–≤–∞—è –ª–æ–≥–∏–∫–∞)
const streetTotals = { flop: {}, turn: {}, river: {} };

handData.actions.forEach(action => {
  if (action.action === 'bet' || action.action === 'raise' || action.action === 'call') {
    const street = action.street || 'flop';
    
    if (!streetTotals[street]) {
      streetTotals[street] = {};
    }
    if (!streetTotals[street][action.playerId]) {
      streetTotals[street][action.playerId] = 0;
    }
    
    if (action.action === 'bet') {
      streetTotals[street][action.playerId] = action.amount;
    } else if (action.action === 'raise') {
      streetTotals[street][action.playerId] = action.totalBet || action.amount;
    } else if (action.action === 'call') {
      streetTotals[street][action.playerId] += action.amount;
    }
  }
});

// –°—É–º–º–∏—Ä—É–µ–º –≤—Å–µ —Å—Ç–∞–≤–∫–∏ –ø–æ —É–ª–∏—Ü–∞–º
Object.keys(streetTotals).forEach(street => {
  const streetTotal = Object.values(streetTotals[street]).reduce((a, b) => a + b, 0);
  if (streetTotal > 0) {
    totalPot += streetTotal;
    console.log(`üí∞ ${street.toUpperCase()}: $${(streetTotal / 100).toFixed(2)}`);
    
    // –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ –∏–≥—Ä–æ–∫–∞–º
    Object.entries(streetTotals[street]).forEach(([playerId, amount]) => {
      console.log(`   ${playerId}: $${(amount / 100).toFixed(2)}`);
    });
  }
});

console.log('');
console.log(`üí∞ –ò–¢–û–ì–û–í–´–ô –ë–ê–ù–ö: $${(totalPot / 100).toFixed(2)}`);
console.log('');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–π–∫–∞
const rake = totalPot * 0.05;
const rakeCapped = Math.min(rake, 100);
console.log(`üí∏ –†–ï–ô–ö: $${(rakeCapped / 100).toFixed(2)}`);
console.log(`üèÜ –í–´–ò–ì–†–´–®: $${((totalPot - rakeCapped) / 100).toFixed(2)}`);
console.log('');

// –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –æ–∂–∏–¥–∞–µ–º—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
const expected = 201000; // $2010 –≤ —Ü–µ–Ω—Ç–∞—Ö
console.log('üîç –ü–†–û–í–ï–†–ö–ê:');
console.log(`   –û–∂–∏–¥–∞–µ–º—ã–π –±–∞–Ω–∫: $${(expected / 100).toFixed(2)}`);
console.log(`   –†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã–π –±–∞–Ω–∫: $${(totalPot / 100).toFixed(2)}`);
console.log(`   –†–µ–∑—É–ª—å—Ç–∞—Ç: ${totalPot === expected ? '‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û' : '‚ùå –û–®–ò–ë–ö–ê'}`); 